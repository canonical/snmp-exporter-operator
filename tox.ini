# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
no_package = True
skip_missing_interpreters = True
env_list = format, lint, static-charm, scenario
min_version = 4.0.0

[vars]
src_path = {toxinidir}/src
tests_path = {toxinidir}/tests
all_path = {[vars]src_path} {[vars]tests_path}

[testenv]
set_env =
    PYTHONPATH = {toxinidir}/lib:{[vars]src_path}
    PYTHONBREAKPOINT=pdb.set_trace
    PY_COLORS=1
pass_env =
    PYTHONPATH
    CHARM_BUILD_DIR
    MODEL_SETTINGS

[testenv:fmt]
description = Apply coding style standards to code
deps =
    black
    ruff
commands =
    black {[vars]all_path}
    ruff --fix {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    ruff
    codespell
commands =
    codespell {toxinidir}
    ruff {[vars]all_path}
    black --check --diff {[vars]all_path}

[testenv:unit]
description = Run unit tests
commands = :

[testenv:static-charm]
description = Run static type checks
deps =
    pyright
    -r {toxinidir}/requirements.txt
commands =
    pyright {[vars]src_path} {posargs}

[testenv:static-lib]
description = Run static type checks for libs
commands = :

[testenv:scenario]
description = Run scenario tests
deps = 
    pytest
    ops-scenario
    -r requirements.txt
commands = 
    pytest -vv --tb native --log-cli-level=INFO -s {posargs} {[vars]tests_path}/scenario

[testenv:integration]
description = Run integration tests
deps =
    juju
    pytest
    pytest-operator
commands =
    pytest -vv --tb native --log-cli-level=INFO -s {posargs} {[vars]tests_path}/integration
